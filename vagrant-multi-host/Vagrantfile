HTTP_PORT = 8080

$prepare_apt = <<SCRIPT
wget http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && \
dpkg -i erlang-solutions_1.0_all.deb && \
apt-get update
SCRIPT

$packages = <<SCRIPT
apt-get install -y emacs24-nox htop bridge-utils openvswitch-switch \
autoconf libncurses-dev build-essential libssl-dev g++ curl \
esl-erlang=1:18.3 python2.7
SCRIPT

$ssh_config = <<SCRIPT
SSHD_CONFIG="/etc/ssh/sshd_config"
TUNNEL="PermitTunnel yes"
cat ${SSHD_CONFIG} | grep "${TUNNEL}"  || \
echo -e "\n${TUNNEL}" >> ${SSHD_CONFIG} && service ssh reload
SCRIPT

$ipv4_forwarding = <<SCRIPT
IP_FORWARD="net.ipv4.ip_forward=1"
SYSCTL_CONF="/etc/sysctl.conf"
sysctl -w ${IP_FORWARD}
cat ${SYSCTL_CONF} | grep "^${IP_FORWARD}" || echo ${IP_FORWARD} >> ${SYSCTL_CONF}
SCRIPT

$get_docker = <<SCRIPT
wget -q -O - https://get.docker.io/gpg | apt-key add -
echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list
apt-get update -qq; apt-get install -q -y --force-yes lxc-docker
usermod -a -G docker vagrant
SCRIPT

# $http_server = <<SCRIPT
# cd /home/vagrant && git clone https://github.com/ninenines/cowboy.git
# git checkout tags/1.0.4
# cd cowboy/examples/static_world
# echo "<h1>Hello from $1</h1>" > index.html
# make
# _rel/static_world_example/bin/static_world_example start
# chown -R vagrant: /home/vagrant/cowboy
# SCRIPT

$http_server = <<SCRIPT
cd /home/vagrant
mkdir -p www
echo "$1" >> www/index.html
chown -R vagrant: www/
SCRIPT


def provision_with_shell(node)
  node.vm.provision "prepare_apt", type: "shell", inline: $prepare_apt
  node.vm.provision "packages", type: "shell", inline: $packages
  node.vm.provision "ssh_config", type: "shell", inline: $ssh_config
  node.vm.provision "ipv4_forwarding", type: "shell", inline: $ipv4_forwarding
  node.vm.provision "get_docker", type: "shell", inline: $get_docker
end

def provision_host(node, host_id)
  node.vm.provision "docker_images",
                    type: "docker",
                    images: ["ubuntu:latest"]
  node.vm.provision "http_server",
                    type: "shell",
                    inline: $http_server,
                    args: "'Hello from host #{host_id}' #{HTTP_PORT}"
end

Vagrant.configure(2) do |config|
  required_plugins = %w( vagrant-hostmanager vagrant-git vagrant-vbguest )
  required_plugins.each do |plugin|
    system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
  end
  
  config.vm.box = "ubuntu/trusty64"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 2048
    vb.cpus = 2
    # Linked cloning is a feature supported by many hypervisors
    # that dramatically speeds up imports by only creating
    # a differential disk versus copying the entire disk image
    # of the virtual machine.
    vb.linked_clone = true
  end
  
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = false
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.vm.synced_folder '.', '/vagrant'
  config.vm.boot_timeout = 60
  
  (1..3).each do |i|
    config.vm.define "td-host#{i}" do |node|
      node.vm.hostname = "td-host#{i}"
      node.vm.network :forwarded_port, guest: 22, host: 2200+i, id: "ssh", auto_correct: true
      node.vm.network :forwarded_port, guest: HTTP_PORT, host: 8080+i, auto_correct: true
      node.vm.network :private_network, ip: "192.169.0.10#{i}"
      provision_with_shell node
      provision_host node, i
    end
  end
  
end
